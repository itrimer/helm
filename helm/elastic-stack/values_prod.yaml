# Default values for elk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
elasticsearch:
  enabled: true
  master:
    persistence:
      enabled: true
      storageClass: "local-storage"
  data:
    persistence:
      storageClass: "local-storage"
      size: 50Gi
  cluster:
    plugins:
      - https://clv-chengdu.oss-cn-chengdu.aliyuncs.com/elasticsearch-analysis-ik-6.8.8.zip
      - https://clv-chengdu.oss-cn-chengdu.aliyuncs.com/elasticsearch-analysis-pinyin-6.8.8.zip
  client:
    nodeSelector:
      kubernetes.io/hostname: k8ss4
kibana:
  enabled: true
  env:
    ELASTICSEARCH_HOSTS: http://{{ .Release.Name }}-elasticsearch-client:9200

logstash:
  enabled: true
  elasticsearch:
     host: http://{{ .Release.Name }}-elasticsearch-client
  persistence:
    enabled: true
    storageClass: "local-storage"
  inputs:
    main: |-
      input {
        beats {
          port => 5044
        }
      }
    car_model_prod: |-
      input {
        jdbc {
          jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
          jdbc_driver_class => "com.mysql.jdbc.Driver"
          jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/datasync?useUnicode=true&characterEncoding=utf-8&useSSL=false"
          jdbc_user => "datasync"
          jdbc_password => "AQoOv63zRj"
          jdbc_paging_enabled => true
          jdbc_page_size => 100000
          schedule => "* * * * *"
          tracking_column => "update_time"
          tracking_column_type => timestamp
          lowercase_column_names => false
          statement_filepath => "/usr/share/logstash/data/last_run/car_model.sql"
          last_run_metadata_path => "/usr/share/logstash/data/last_run/car_model_prod_last_run"
          add_field => {
            index => "car_model_prod"
          }
        }
      }
    im_abstract_object_prod: |-
      input {
        jdbc {
          jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
          jdbc_driver_class => "com.mysql.jdbc.Driver"
          jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
          jdbc_user => "resourcecenter"
          jdbc_password => "AQoOv63zRj"
          jdbc_paging_enabled => true
          jdbc_page_size => 100000
          schedule => "* * * * *"
          tracking_column => "update_time"
          tracking_column_type => timestamp
          lowercase_column_names => false
          statement_filepath => "/usr/share/logstash/data/last_run/im_abstract_object.sql"
          last_run_metadata_path => "/usr/share/logstash/data/last_run/im_abstract_object_prod_last_run"
          add_field => {
            index => "im_abstract_object_prod"
          }
        }
      }
    rs_defined_prod: |-
      input {
        jdbc {
          jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
          jdbc_driver_class => "com.mysql.jdbc.Driver"
          jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
          jdbc_user => "resourcecenter"
          jdbc_password => "AQoOv63zRj"
          jdbc_paging_enabled => true
          jdbc_page_size => 100000
          schedule => "* * * * *"
          tracking_column => "update_time"
          tracking_column_type => timestamp
          lowercase_column_names => false
          statement_filepath => "/usr/share/logstash/data/last_run/rs_defined.sql"
          last_run_metadata_path => "/usr/share/logstash/data/last_run/rs_defined_uat_last_run"
          add_field => {
            index => "rs_defined_prod"
          }
        }
      }


  filters:
    main: |-
      filter {
        if [fields][file_type] == "access_log" {
          grok {
            match => { "message" => "%{IPORHOST:client} %{USER:ident} %{USER:auth}(?: %{URIPATHPARAM:path})? \[%{HTTPDATE:querytime}\] \"(?:%{WORD:verb} %{URIPATHPARAM:request}(?: HTTP/%{NUMBER:http_ver})?|-)\" %{NUMBER:status} (?:%{NUMBER:bytes}|-) %{NUMBER:response_time} \"(?:%{URI:referer}|-)\" %{QS:agent}" }
          }
          date {
            match => ["querytime", "dd/MMM/yyyy:HH:mm:ss Z"]
            remove_field => ["querytime"]
          }
          mutate {
            add_field => {
              "[@metadata][file_type]" => "%{[fields][file_type]}"
              "[@metadata][env]" => "%{[fields][env]}"
              "app_name" => "%{[fields][app_name]}"
              "app_id" => "%{[fields][app_id]}"
            }
            convert => {"bytes" => "integer" "status"=>"integer" "response_time" => "integer" }
            remove_field => ["beat", "fields", "type", "tags"]
          }
        } else if [fields][file_type] == "java_log" {
          grok {
            match => {"message" => "\[%{TIMESTAMP_ISO8601:logtime}\] %{LOGLEVEL:level} %{HTTPDUSER:traceId}\:%{HTTPDUSER:subId}(\:%{HTTPDUSER:userId})?(\:%{GREEDYDATA:ppId})? \[%{DATA:thread}\] %{JAVACLASS:class}\.%{JAVAMETHOD:class_method}\(%{JAVAFILE:class_file}(?::%{NUMBER:class_line})?\) - %{JAVALOGMESSAGE:message}"}
            overwrite => ["message"]
          }
          date {
            match => ["logtime", "yyyy-MM-dd HH:mm:ss,SSS"]
            remove_field => ["logtime"]
          }
          mutate {
            add_field => {
              "[@metadata][file_type]" => "%{[fields][file_type]}"
              "[@metadata][env]" => "%{[fields][env]}"
              "app_name" => "%{[fields][app_name]}"
              "app_id" => "%{[fields][app_id]}"
            }
            convert => {"class_line" => "integer"}
            remove_field => ["beat", "fields", "type", "tags"]
          }
        }
      }
    im_abstract_object_prod: |-
      filter {
        if [index] == "im_abstract_object_prod" {
          jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	  jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT identify_relation_ukid identifyRelationUkid, identify_code identifyCode, identify_type identifyType FROM cm_identify_relation cir WHERE cir.relation_ukid = :relationUkid AND cir.relation_type = '1'"
            parameters => { "relationUkid" => "abstractObjectUkid" }
            target => "identifies"
          }
      	jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	  jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT attribute_relation_ukid attributeRelationUkid, attribute_ukid attributeUkid, attribute_value attributeValue, attribute_name attributeName, attribute_code attributeCode, attribute_type attributeType FROM cm_attribute_relation car WHERE car.relation_ukid = :relationUkid AND car.relation_type = 1 AND car.`attribute_code` = 'brand'"
            parameters => { "relationUkid" => "abstractObjectUkid" }
            target => "attributes"
          }
      	jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	  jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT queryAncestorCategoryChainUkids(cr.category_ukid) as ancestorCategoryChainUkids FROM cm_category_relation cr WHERE cr.`relation_type` = '1' AND cr.`relation_ukid` = :relationUkid"
            parameters => { "relationUkid" => "abstractObjectUkid" }
            target => "ancestorCategoryChainUkids"
          }
        }
      }
    rs_defined_prod: |-
      filter {
        if [index] == "rs_defined_prod" {
          jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	  jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT identify_relation_ukid identifyRelationUkid, identify_code identifyCode, identify_type identifyType FROM cm_identify_relation cir WHERE cir.relation_ukid = :relationUkid AND cir.relation_type = 0"
            parameters => { "relationUkid" => "definedUkid" }
            target => "identifies"
          }
          jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	    jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT attribute_relation_ukid attributeRelationUkid, attribute_ukid attributeUkid, attribute_value attributeValue, attribute_name attributeName, attribute_code attributeCode, attribute_type attributeType FROM cm_attribute_relation car WHERE car.relation_ukid = :relationUkid AND car.relation_type = 0 AND car.`attribute_code` = 'brand'"
            parameters => { "relationUkid" => "definedUkid" }
            target => "attributes"
          }
          jdbc_streaming {
            jdbc_driver_library => "/usr/share/logstash/data/mysql-connector-java-5.1.44.jar"
            jdbc_driver_class => "com.mysql.jdbc.Driver"
            jdbc_connection_string => "jdbc:mysql://192.168.202.46:3306/resourcecenter?useUnicode=true&autoReconnect=true&characterEncoding=utf-8&useSSL=false"
            jdbc_user => "resourcecenter"
      	  jdbc_validate_connection => true
            jdbc_password => "AQoOv63zRj"
            statement => "SELECT queryAncestorCategoryChainUkidsForResource(:relationUkid) as ancestorCategoryChainUkids"
            parameters => { "relationUkid" => "definedUkid" }
            target => "ancestorCategoryChainUkids"
          }
        }
      }
  outputs:
    main: |-
      output {
        if [@metadata][file_type] == "access_log" {
          elasticsearch {
            hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
            index => "%{[@metadata][env]}_access_%{app_name}_%{+YYYY.MM.dd}"
            document_type => "%{[@metadata][type]}"
          }
        } else if [@metadata][file_type] == "java_log" {
          elasticsearch {
            hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
            index => "%{[@metadata][env]}_%{app_name}_%{+YYYY.MM.dd}"
            document_type => "%{[@metadata][type]}"
          }
        }
        #stdout { codec => rubydebug }
      }
    car_model_prod: |-
      output {
        if [index] == "car_model_prod" {
          elasticsearch {
            hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
            index => "%{index}"
            document_id => "%{modelUkid}"
            template => "/usr/share/logstash/data/last_run/car_model.json"
            template_name => "car_model"
            template_overwrite => true
          }
        }
      }
    im_abstract_object_prod: |-
      output {
        if [index] == "im_abstract_object_prod" {
          elasticsearch {
            hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
            index => "%{index}"
            document_id => "%{abstractObjectUkid}"
            template => "/usr/share/logstash/data/last_run/im_abstract_object_template.json"
            template_name => "im_abstract_object"
            template_overwrite => true
          }
        }
      }
    rs_defined_prod: |-
      output {
        if [index] == "rs_defined_prod" {
          elasticsearch {
            hosts => ["${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}"]
            index => "%{index}"
            document_id => "%{definedUkid}"
            template => "/usr/share/logstash/data/last_run/rs_defined_template.json"
            template_name => "rs_defined"
            template_overwrite => true
          }
        }
      }
filebeat:
  enabled: false
  # config:
  #   output.file.enabled: false
  #   output.logstash:
  #     hosts: ["elastic-stack-logstash:5044"]
  # indexTemplateLoad:
  #   - elastic-stack-elasticsearch-client:9200

fluentd:
  enabled: false

fluent-bit:
  enabled: false

fluentd-elasticsearch:
  enabled: false

nginx-ldapauth-proxy:
  enabled: false
  # Example config to get it working with ELK. Adjust as you need to.
  # proxy:
  #   port: 5601
  #   # This is the internal hostname for the kibana service
  #   host: "elk-kibana.default.svc.cluster.local"
  #   authName: "ELK:Infrastructure:LDAP"
  #   ldapHost: "ldap.example.com"
  #   ldapDN: "dc=example,dc=com"
  #   ldapFilter: "objectClass=organizationalPerson"
  #   ldapBindDN: "cn=reader,dc=example,dc=com"
  #   requires:
  #     - name: "ELK-USER"
  #       filter: "cn=elkuser,ou=groups,dc=example,dc=com"
  # ingress:
  #   enabled: true
  #   hosts:
  #     - "elk.example.com"
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #   tls:
  #     - hosts:
  #       - elk.example.com
  #       secretName: example-elk-tls
  # secrets:
  #   ldapBindPassword: PASSWORD
elasticsearch-curator:
  enabled: false

elasticsearch-exporter:
  enabled: false
